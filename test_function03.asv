% %Example sigmoid function
% function [f_val,dfdx] = test_function03(x)
%     global input_list;
%     input_list(:,end+1) = x;
%     a = 27.3; b = 2; c = 8.3; d = -3;
%     H = exp((x-a)/b);
%     dH = H/b;
%     L = 1+H;
%     dL = dH;
%     f_val = c*H./L+d;
%     dfdx = c*(L.*dH-H.*dL)./(L^2);
% 
%     x = 0:0.1:50;
%     y = @(x) c*exp((x-a)/b)./(1+exp((x-a)/b)) + d;
% 
%     num_trials = 200;
%     guess_list1 = randi([-5, 5], 1, num_trials);
%     guess_list2 = randi([45, 50], 1, num_trials);
% 
%     filter_list = [1e-15, 1e-2, 1e-14, 1e-2, 2];
%     root = convergence_analysis(1, y, 5, guess_list1, guess_list2, filter_list);
%     newton_test = convergence_analysis(2, y, 5, guess_list1, guess_list2, filter_list);
% 
%     figure();
%     plot(x, y(x), 'LineWidth', 2);
%     hold on;
%     plot(root, y(root), 'MarkerSize', 4, 'Marker', 'o', 'MarkerFaceColor', 'r');
%     y_value = y(root);
%     yline(y_value, 'k--', 'LineWidth', 1.5);
% 
% end

function test_function03()
    a = 27.3; b = 2; c = 8.3; d = -3;
    
    sigmoid_fun = @(x) (c * exp((x - a) / b) ./ (1 + exp((x - a) / b))) + d;
    sigmoid_with_derivative = @(x) sigmoid_and_derivative(x, a, b, c, d);

    true_root = fzero(sigmoid_fun, 30);

    x_vals = 0:0.1:50;
    y_vals = sigmoid_fun(x_vals);

    figure;
    hold on;

    for i = 1:length(x_vals)-1
        x0 = x_vals(i);
        is_successful = false;
        try
            f_handle = @(x) get_f(sigmoid_with_derivative, x);
            dfdx_handle = @(x) get_dfdx(sigmoid_with_derivative, x);
            
            root = newton_solver(f_handle, dfdx_handle, x0);
            
            if abs(root - true_root) < 1e-6
                is_successful = true;
            end
        catch
            is_successful = false;
        end
        
        if is_successful
            plot(x_vals(i:i+1), y_vals(i:i+1), 'b-', 'LineWidth', 2);
        else
            plot(x_vals(i:i+1), y_vals(i:i+1), 'r-', 'LineWidth', 2);
        end
    end
    
    plot(true_root, 0, 'ko', 'MarkerFaceColor', 'k', 'MarkerSize', 6);
    yline(0, 'k--', 'LineWidth', 0.5);

    title("Newton's Method Convergence on Sigmoid");
    xlabel('x');
    ylabel('f(x)');
    axis([0 50 -8 8]);
    box on;
    hold off;

end

function [f_val, dfdx] = sigmoid_and_derivative(x, a, b, c, d)
    H = exp((x - a) / b);
    dH = H / b;
    L = 1 + H;
    dL = dH;
    f_val = c * H ./ L + d;
    dfdx = c * (L .* dH - H .* dL) ./ (L.^2);
end

function f = get_f(fun_handle, x)
    [f, ~] = fun_handle(x);
end

function dfdx = get_dfdx(fun_handle, x)
    [~, dfdx] = fun_handle(x);
end